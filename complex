#include <iostream>
#include <sstream>
using namespace std;

struct complex_t {
public:
    static unsigned int count;
    complex_t() {
        real = 0.0f;
        imag = 0.0f;
        ++count;
    }
    complex_t add(complex_t other) const { // complex_t * const константный указатель, complex_t const * const константный указатель на константный тип
        complex_t complex;
        complex.real = this->real + other.real;
        complex.imag = this->imag + other.imag;
        return complex;
    }
    ostream & output(ostream &stream) const { // complex_t * const
        return stream << '(' << this->real << ',' << this->imag << ')' << endl;
    }
    ~complex_t() {

    }
    void set_real(float value) {
        if( value > 0.0f) {
            real = value;
        }
    }
    void set_imag(float value) {
        if( value > 0.0f) {
            imag = value;
        }
    }
private:
    float real;
    float imag;

};
bool read(istream & stream, complex_t & complex) {
    char ch;
    bool res = true;
    float real, imag;
    if (stream >> ch && ch == '(' &&
    stream >> real &&
    stream >> ch && ch == ',' &&
    stream >> imag &&
    stream>> ch && ch == ')') {
        complex.set_real(real);
        complex.set_imag(imag);
    }
    else {res = false; cout << "An error has occured while reading input data";}
    return res;
}

unsigned int complex_t::count = 0;

int main() {
    complex_t cm1, cm2, result;
    string string;
    getline(cin, string);
    istringstream stream(string);
    if(read(stream, cm1) && read(stream, cm2)) {
        result = cm1.add(cm2);
        result.output(cout);
    }
    cout << complex_t::count;


}
